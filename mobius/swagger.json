{
  "swagger" : "2.0",
  "info" : {
    "description" : "Mobius API",
    "version" : "1.0.0",
    "title" : "Mobius API",
    "termsOfService" : "None",
    "contact" : {
      "email" : "kthare10@renci.org"
    },
    "license" : {
      "name" : "EPL-2.0",
      "url" : "https://opensource.org/licenses/EPL-2.0"
    }
  },
  "host" : "localhost:8080",
  "basePath" : "/mobius",
  "schemes" : [ "https" ],
  "paths" : {
    "/workflow" : {
      "get" : {
        "summary" : "returs status of the workflow",
        "description" : "Get the status of the workflow by passing workflow id\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workflowID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "default" : {
            "description" : "Unexpected Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Returns a token identifying a new workflow\n",
        "description" : "Returns a token identifying a new workflow\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workflowID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "default" : {
            "description" : "Unexpected Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a workflow",
        "description" : "Delete a workflow",
        "parameters" : [ {
          "name" : "workflowID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "default" : {
            "description" : "Unexpected Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          }
        }
      }
    },
    "/storage" : {
      "post" : {
        "summary" : "Request/modify storage resource for a workflow\n",
        "description" : "Request/modify storage resource for a workflow\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workflowID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "string",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/storageRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "default" : {
            "description" : "Unexpected Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          }
        }
      }
    },
    "/network" : {
      "post" : {
        "summary" : "Request/modify network resource for a workflow\n",
        "description" : "Request/modify network resource for a workflow\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workflowID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "string",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/networkRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "default" : {
            "description" : "Unexpected Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          }
        }
      }
    },
    "/compute" : {
      "post" : {
        "summary" : "Request/modify compute resource for a workflow\n",
        "description" : "Request/modify compute resource for a workflow\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workflowID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "string",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/computeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "default" : {
            "description" : "Unexpected Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          }
        }
      }
    },
    "/stitch" : {
      "post" : {
        "summary" : "Request/modify stitching\n",
        "description" : "Request/modify stitching\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workflowID",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "string",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/stitchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          },
          "default" : {
            "description" : "Unexpected Error",
            "schema" : {
              "$ref" : "#/definitions/mobiusResponse"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "mobiusResponse" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "integer",
          "description" : "status code",
          "minimum" : 0
        },
        "message" : {
          "type" : "string",
          "description" : "status message"
        },
        "value" : {
          "type" : "object",
          "description" : "JSON object",
          "properties" : { }
        },
        "version" : {
          "type" : "string",
          "description" : "Mobius version"
        }
      }
    },
    "computeRequest" : {
      "type" : "object",
      "required" : [ "coallocate", "cpus", "diskPerCpus", "gpus", "networkType", "ramPerCpus", "site", "slicePolicy" ],
      "properties" : {
        "site" : {
          "type" : "string",
          "description" : "execution site"
        },
        "cpus" : {
          "type" : "integer",
          "description" : "number of cpus",
          "minimum" : 0
        },
        "gpus" : {
          "type" : "integer",
          "description" : "number of gpus",
          "minimum" : 0
        },
        "ramPerCpus" : {
          "type" : "integer",
          "description" : "RAM per cpu in MB",
          "minimum" : 0
        },
        "diskPerCpus" : {
          "type" : "integer",
          "description" : "Disk per cpu in MB",
          "minimum" : 0
        },
        "leaseStart" : {
          "type" : "string",
          "description" : "Least Start Time"
        },
        "leaseEnd" : {
          "type" : "string",
          "description" : "Least End Time"
        },
        "coallocate" : {
          "type" : "boolean",
          "description" : "flag indicating if CPUs should be allocated across multiple compute resources or not. Should be set to 'true' if CPUs should be coallocated on single compute resource. Default value is 'false'",
          "default" : false
        },
        "slicePolicy" : {
          "type" : "string",
          "description" : "Indicates Slice policy to be used. For 'new' slicePolicy, compute resources are added in a new slice on site specified. For 'existing' slicePolicy, compute resources are added to existing slice specified by 'sliceName' field. For 'default' slicePolicy, compute resources are either added to an existing slice with same leaseEndTime if found or added to a new slice on site specified. Default value is 'default'",
          "default" : "default",
          "enum" : [ "new", "existing", "default" ]
        },
        "sliceName" : {
          "type" : "string",
          "description" : "existing slice name to which compute resources should be added"
        },
        "hostNamePrefix" : {
          "type" : "string",
          "description" : "prefix to be added to hostName"
        },
        "ipAddress" : {
          "type" : "string",
          "description" : "ip address to assign. should be specified only if coallocate is set to 'true'."
        },
        "bandwidth" : {
          "type" : "string",
          "description" : "bandwidth for subnet interface."
        },
        "networkType" : {
          "type" : "string",
          "description" : "Indicates Network policy to be used for Chameleon resources. When set to 'private', a private network for the workflow is created to connect all compute instances. The user is expected to pass the physicalNetwork Name in this case. When set to 'default', all compute instances are connected to the default network 'sharednet' which is configured as Default chameleon network in mobius. Default value is 'default'. Private network is created only once per workflow. For subsequent requests existing network is used.",
          "default" : "default",
          "enum" : [ "private", "default" ]
        },
        "physicalNetwork" : {
          "type" : "string",
          "description" : "physical network name over which private network should be created to connected Chameleon compute resources. Only needed for Chameleon requests when networkType is 'private'."
        },
        "externalNetwork" : {
          "type" : "string",
          "description" : "external network name over which would be used for routing to external world. Only needed for Chameleon requests when networkType is 'private'."
        },
        "networkCidr" : {
          "type" : "string",
          "description" : "network cidr for the private network. Only needed for Chameleon requests when networkType is 'private'."
        },
        "imageUrl" : {
          "type" : "string",
          "description" : "image url"
        },
        "imageHash" : {
          "type" : "string",
          "description" : "image hash"
        },
        "imageName" : {
          "type" : "string",
          "description" : "image name"
        },
        "postBootScript" : {
          "type" : "string",
          "description" : "post boot script"
        },
        "stitchPortUrl" : {
          "type" : "string",
          "description" : "port url for the stitch port"
        },
        "stitchTag" : {
          "type" : "string",
          "description" : "vlan tag for the stitch port"
        },
        "stitchIP" : {
          "type" : "string",
          "description" : "IP address for the StitchPort interface on VM"
        },
        "stitchBandwidth" : {
          "type" : "string",
          "description" : "Bandwidth for the StitchPort in bps"
        },
        "forceflavor" : {
          "type" : "string",
          "description" : "force mobius to use the flavor indicated instead of the one determined by its algorithm"
        }
      }
    },
    "networkRequest" : {
      "type" : "object",
      "required" : [ "action", "destination", "destinationIP", "destinationSubnet", "source", "sourceIP", "sourceSubnet" ],
      "properties" : {
        "source" : {
          "type" : "string",
          "description" : "hostname of the source node"
        },
        "sourceIP" : {
          "type" : "string",
          "description" : "ip of the source node"
        },
        "sourceSubnet" : {
          "type" : "string",
          "description" : "subnet of the source node"
        },
        "destination" : {
          "type" : "string",
          "description" : "hostname of the destination node"
        },
        "destinationIP" : {
          "type" : "string",
          "description" : "ip of the destination node"
        },
        "destinationSubnet" : {
          "type" : "string",
          "description" : "subnet of the destination node"
        },
        "linkSpeed" : {
          "type" : "integer",
          "description" : "Link speed"
        },
        "leaseStart" : {
          "type" : "string",
          "description" : "Least Start Time"
        },
        "leaseEnd" : {
          "type" : "string",
          "description" : "Least End Time"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "add", "delete" ]
        }
      }
    },
    "storageRequest" : {
      "type" : "object",
      "required" : [ "action", "mountPoint", "size", "target" ],
      "properties" : {
        "mountPoint" : {
          "type" : "string",
          "description" : "mount point"
        },
        "target" : {
          "type" : "string",
          "description" : "hostname or ip of the destination"
        },
        "size" : {
          "type" : "integer",
          "description" : "size in GB",
          "minimum" : 0
        },
        "leaseStart" : {
          "type" : "string",
          "description" : "Least Start Time"
        },
        "leaseEnd" : {
          "type" : "string",
          "description" : "Least End Time"
        },
        "action" : {
          "type" : "string",
          "description" : "Action to be taken i.e. add, delete, renew. For 'add' action, Storage resource is added to target node. If target not is not found, an error is returned. For 'delete' action, all storage nodes attached to target node are deleted. For 'renew' action, lease of the entire slice is renewed.",
          "enum" : [ "add", "delete", "renew" ]
        }
      }
    },
    "stitchRequest" : {
      "type" : "object",
      "required" : [ "portUrl", "tag", "target" ],
      "properties" : {
        "target" : {
          "type" : "string",
          "description" : "hostname or ip of the destination node which should be stitched to"
        },
        "portUrl" : {
          "type" : "string",
          "description" : "port url for the stitch port"
        },
        "tag" : {
          "type" : "string",
          "description" : "vlan tag for the stitch port"
        },
        "stitchIP" : {
          "type" : "string",
          "description" : "IP address for the StitchPort interface on VM"
        },
        "bandwidth" : {
          "type" : "string",
          "description" : "Bandwidth for the StitchPort in bps"
        }
      }
    }
  },
  "parameters" : {
    "workflowID" : {
      "name" : "workflowID",
      "in" : "query",
      "required" : true,
      "type" : "string"
    }
  }
}