/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.renci.mobius.api;

import org.renci.mobius.model.MobiusResponse;
import org.renci.mobius.model.ScriptRequest;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-06-25T14:22:01.560-04:00[America/New_York]")
@Api(value = "script", description = "the script API")
public interface ScriptApi {

    @ApiOperation(value = "Request to push command or set of commands to a node ", nickname = "scriptPost", notes = "Request to push command or set of commands to a node ", response = MobiusResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = MobiusResponse.class),
        @ApiResponse(code = 400, message = "Bad Request", response = MobiusResponse.class),
        @ApiResponse(code = 403, message = "Forbidden", response = MobiusResponse.class),
        @ApiResponse(code = 404, message = "Not Found", response = MobiusResponse.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = MobiusResponse.class),
        @ApiResponse(code = 200, message = "Unexpected Error", response = MobiusResponse.class) })
    @RequestMapping(value = "/script",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<MobiusResponse> scriptPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ScriptRequest body
,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "workflowID", required = true) String workflowID
);

}
